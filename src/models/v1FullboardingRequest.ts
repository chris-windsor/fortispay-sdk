/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { Address22, address22Schema } from './address22';
import { BankAccount, bankAccountSchema } from './bankAccount';
import { Document, documentSchema } from './document';
import { KycResponseObject, kycResponseObjectSchema } from './kycResponseObject';
import { Owner, ownerSchema } from './owner';
import { OwnershipTypeEnum, ownershipTypeEnumSchema } from './ownershipTypeEnum';
import {
  PreferredLanguageEnum,
  preferredLanguageEnumSchema,
} from './preferredLanguageEnum';
import { PricingElement, pricingElementSchema } from './pricingElement';

export interface V1FullboardingRequest {
  /** Location ID */
  parentId?: string | null;
  /** The ID of the template to be used - this value will be provided by Fortis. */
  templateId?: string;
  /** Client Issues Id to track that can be used to track each submitted merchant application. This id should be generated and sent in the request payload, and will be returned in the response payload. If no id is submitted in the payload request, this field will be null in the response. */
  clientAppId?: string | null;
  /** Merchant email address. */
  email: string;
  /** Merchant 'Doing Business As' name. */
  dbaName: string;
  /** Merchant legal name. */
  legalName?: string | null;
  /** Merchant's business website. */
  website?: string | null;
  /** Merchant's phone number. */
  phoneNumber: string;
  /** The Ownership Type of the merchant's business. */
  ownershipType: OwnershipTypeEnum;
  /** Federal Tax ID (EIN). */
  fedTaxId: string;
  /** Average Transaction Amount. */
  averageTicket: number;
  /** Highest transaction amount rounded to the next dollar */
  highTicket: number;
  /** Average monthly credit card volume rounded to the next dollar. */
  ccMonthlyVolume: number;
  /** Average monthly echeck volume rounded to the next dollar. */
  ecMonthlyVolume?: number | null;
  /** Merchant's MCC code. */
  mccCode: string;
  /** Description of Goods or Services. */
  businessDescription: string;
  /** Card present/swiped percentage */
  swipedPercent: number;
  /** Card not present/keyed percentage */
  keyedPercent: number;
  /** eCommerce percentage. */
  ecommercePercent: number;
  /** Indicates whether or not the merchant is a foreign entity. */
  isForeignEntity: boolean;
  /** Indicates whether or not the merchant is personally guaranteed. */
  personallyGuaranteed: boolean;
  /** Merchant preferred language. English(“en-US”) will be used if no value is supplied. */
  preferredLanguage?: PreferredLanguageEnum | null;
  addresses: Address22[];
  owners: Owner[];
  bankAccounts: BankAccount[];
  documents?: Document[];
  pricingElements?: PricingElement[];
  kycResponseObjects?: KycResponseObject[];
  /** Valid JSON of metadata related to merchant. */
  metadata?: unknown;
  [key: string]: unknown;
}

export const v1FullboardingRequestSchema: Schema<V1FullboardingRequest> = expandoObject(
  {
    parentId: ['parent_id', optional(nullable(string()))],
    templateId: ['template_id', optional(string())],
    clientAppId: ['client_app_id', optional(nullable(string()))],
    email: ['email', string()],
    dbaName: ['dba_name', string()],
    legalName: ['legal_name', optional(nullable(string()))],
    website: ['website', optional(nullable(string()))],
    phoneNumber: ['phone_number', string()],
    ownershipType: ['ownership_type', ownershipTypeEnumSchema],
    fedTaxId: ['fed_tax_id', string()],
    averageTicket: ['average_ticket', number()],
    highTicket: ['high_ticket', number()],
    ccMonthlyVolume: ['cc_monthly_volume', number()],
    ecMonthlyVolume: ['ec_monthly_volume', optional(nullable(number()))],
    mccCode: ['mcc_code', string()],
    businessDescription: ['business_description', string()],
    swipedPercent: ['swiped_percent', number()],
    keyedPercent: ['keyed_percent', number()],
    ecommercePercent: ['ecommerce_percent', number()],
    isForeignEntity: ['is_foreign_entity', boolean()],
    personallyGuaranteed: ['personally_guaranteed', boolean()],
    preferredLanguage: [
      'preferred_language',
      optional(nullable(preferredLanguageEnumSchema)),
    ],
    addresses: ['addresses', array(lazy(() => address22Schema))],
    owners: ['owners', array(lazy(() => ownerSchema))],
    bankAccounts: ['bank_accounts', array(lazy(() => bankAccountSchema))],
    documents: ['documents', optional(array(lazy(() => documentSchema)))],
    pricingElements: [
      'pricing_elements',
      optional(array(lazy(() => pricingElementSchema))),
    ],
    kycResponseObjects: [
      'kyc_response_objects',
      optional(array(lazy(() => kycResponseObjectSchema))),
    ],
    metadata: ['metadata', optional(unknown())],
  }
);
