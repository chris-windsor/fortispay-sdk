/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { expandoObject, nullable, number, optional, Schema } from '../schema';

/** The following options outlines some configurable timeout values that can be used to customize the experience at the terminal for the cardholder. */
export interface TerminalTimeouts {
  /** How long to wait for input from cardholder. */
  cardEntryTimeout?: number | null;
  /** How long the terms will be displayed on the device. */
  deviceTermsPromptTimeout?: number | null;
  /** How long to wait for response from /v2/routertransactions endpoint. */
  overallTimeout?: number | null;
  /** How long to wait for pin entry by cardholder. */
  pinEntryTimeout?: number | null;
  /** How long to wait for first "touch" to signature. */
  signatureInputTimeout?: number | null;
  /** How long to wait for signature to be submitted. */
  signatureSubmitTimeout?: number | null;
  /** How long the approve/decline status message stays on screen. */
  statusDisplayTime?: number | null;
  /** How long to wait for input on a tip or cashback screen. */
  tipCashbackTimeout?: number | null;
  /** How long to wait for response from the processor. */
  transactionTimeout?: number | null;
  [key: string]: unknown;
}

export const terminalTimeoutsSchema: Schema<TerminalTimeouts> = expandoObject({
  cardEntryTimeout: ['card_entry_timeout', optional(nullable(number()))],
  deviceTermsPromptTimeout: [
    'device_terms_prompt_timeout',
    optional(nullable(number())),
  ],
  overallTimeout: ['overall_timeout', optional(nullable(number()))],
  pinEntryTimeout: ['pin_entry_timeout', optional(nullable(number()))],
  signatureInputTimeout: [
    'signature_input_timeout',
    optional(nullable(number())),
  ],
  signatureSubmitTimeout: [
    'signature_submit_timeout',
    optional(nullable(number())),
  ],
  statusDisplayTime: ['status_display_time', optional(nullable(number()))],
  tipCashbackTimeout: ['tip_cashback_timeout', optional(nullable(number()))],
  transactionTimeout: ['transaction_timeout', optional(nullable(number()))],
});
