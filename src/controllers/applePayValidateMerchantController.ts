/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { Response401tokenError } from '../errors/response401tokenError';
import { Response412Error } from '../errors/response412Error';
import {
  ResponseApplePayValidateMerchant,
  responseApplePayValidateMerchantSchema,
} from '../models/responseApplePayValidateMerchant';
import {
  V1WalletProviderApplePayValidateMerchantRequest,
  v1WalletProviderApplePayValidateMerchantRequestSchema,
} from '../models/v1WalletProviderApplePayValidateMerchantRequest';
import { BaseController } from './baseController';

export class ApplePayValidateMerchantController extends BaseController {
  /**
   * Apple Pay Validate Merchant
   *
   * @param body
   * @return Response from the API call
   */
  async applePayValidateMerchant(
    body: V1WalletProviderApplePayValidateMerchantRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseApplePayValidateMerchant>> {
    const req = this.createRequest(
      'POST',
      '/v1/wallet-provider/apple-pay-validate-merchant'
    );
    const mapped = req.prepareArgs({
      body: [body, v1WalletProviderApplePayValidateMerchantRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    return req.callAsJson(
      responseApplePayValidateMerchantSchema,
      requestOptions
    );
  }
}
